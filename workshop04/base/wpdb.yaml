# For stateful set, need a headless service which is this
apiVersion: v1
kind: Service
metadata:
  name: wpdb-svc
  labels:
    app: wp
    name: wpdb-svc
spec: 
  clusterIP: None
  selector:
    app: wp
    name: wpdb-po
  ports:
  - port: 3306  
    targetPort: 3306
---
apiVersion: v1
kind: Service 
metadata:
  name: wpdb-master-svc 
  labels:
    app: wp 
    name: wpdb-master-svc 
spec:
  type: ClusterIP
  selector: 
    app: wp
    name: wpdb-po
  ports:
  - port: 3306
    targetPort: 3306
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wpdb-sts
  labels:
    app: wp
    name: wpdb-sts
spec:
  replicas: 1
  serviceName: wpdb-svc  # must have serviceName in order to build a StatefulSet
  selector:
    matchLabels:
      app: wp
      name: wpdb-po
  volumeClaimTemplates:
  - apiVersion: v1 
    kind: PersistentVolumeClaim  
    metadata:
      name: wpdb-pvc
      labels:
        app: wp
    spec:
      accessModes: 
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: do-block-storage
  template:
    metadata:
      name: wpdb-po
      labels:
        app: wp
        name: wpdb-po
    spec:
      containers:
      - name: wpdb-container
        image: mysql:8.0
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: wpdb-cm      ## This will be generated per customer
        - secretRef:
            name: wpdb-secret  ## This will be generated per customer
        volumeMounts: 
        - name: wpdb-pvc 
          mountPath: /var/lib/mysql
---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy 
# metadata:
#   name: wpdb-netpol
#   labels:
#     app: wp 
#     name: wpdb-netpol 
# spec:
#   podSelector:
#     matchLabels:
#       app: wp 
#       name: wpdb-po
#   policyTypes:
#   - Ingress
#   ingress:
#   - from:
#     - podSelector:
#         matchLabels:
#           app: wp
#           name: wpapp-po
#     ports:
#     - port: 3306
#       protocol: TCP
